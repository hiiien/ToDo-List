<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles/styles.css">
    <title>ToDo List</title>
</head>
<body>
    <div class="heading">
        <h1>Today's ToDos</h1>
    </div>
    <!-- form to add new todos -->
    <div class="note-pad">
        <div id="add-todo" ></div>
            <form onsubmit="addToDo(event)">
                <input id="new-todo-content" type="text" name="content" placeholder="Enter a new item.." autocomplete="off" autofocus="true" required>
                <button type="submit"><img class="icon" src="/assets/noun-hand-drawn-plus-698168.svg" alt=""></button>
            </form>
        </div>


        <div id="todo-list">
        <% for(let toDo of toDos){ %>
        

            <!-- Note card for each todo -->
            <div class="note" id="note-id-<%= toDo.id %>">
                <div class="to-do-content">
                    <p id="todo-content-<%= toDo.id %>"> <%= toDo.content %></p> <!-- Regular content-->
                    <button id="edit-<%= toDo.id %>" onclick="showEditForm('<%=toDo.id %>')">
                        <img class="icon" src="/assets/pencil-solid.svg" alt="pencil icon for edit button">
                    </button>
                    <form id="edit-form" onsubmit="submitEditForm(event, '<%= toDo.id %>')"></form>
                        <input type="hidden" name="id" value="<%=  toDo.id %>">
                        <input id="todo-input-<%=  toDo.id %>" type="text" name="content" value="<%= toDo.content %>" hidden="true" autofocus="true">
                        <button type="submit" id="submit-edit-<%= toDo.id %>" hidden="true" onclick="hideEditForm('<%= toDo.id %>')">
                            <img class="icon" src="/assets/check-solid.svg" alt="checkmark icon for submit changes">
                        </button>
                    </form>
                    
                
                    <form id="delete-form" onsubmit="deleteToDo(event, '<%= toDo.id %>')">
                        <button type="submit" id="delete-todo-<%= toDo.id %>"><img class="icon" src="/assets/trash-can.svg" alt="trash-can icon for delete todo"></button>
                    </form>
                </div>
                <!-- edit form which allows for edited to dos and updates DOM -->
                
                <!-- delete form which can delete to dos and updates the DOM -->
                
            </div>
        <% }%>
        </div>
    </div>


    <script>

        //hides the the todo and opens the edit form
        function showEditForm(id){
            document.getElementById("edit-" + id).setAttribute("hidden", true);
            document.getElementById("todo-content-" + id).setAttribute("hidden", true);
            document.getElementById("todo-input-" + id).removeAttribute("hidden");
            document.getElementById("submit-edit-" + id).removeAttribute("hidden");
            document.getElementById("todo-input-" + id).focus();
        }

        //hides the edit form when edits are done and displays the regular todo
        function hideEditForm(id){
            document.getElementById("edit-" + id).removeAttribute("hidden");
            document.getElementById("todo-content-" + id).removeAttribute("hidden");
            document.getElementById("todo-input-" + id).setAttribute("hidden", true);
            document.getElementById("submit-edit-" + id).setAttribute("hidden", true);
        }

        //removes all children of deleted note on the client side
        function removeChildren(element){
            while(element.firstChild){
                element.removeChild(element.firstChild);
            }
        }

        //adds the new to do to the database
        async function addToDo(event){
            event.preventDefault();
            const content = document.getElementById('new-todo-content').value;
            try {
                const response = await fetch('/todos/' , {
                    method: 'POST',
                    headers: {
                        'Content-Type' : 'application/json'
                    },
                    body: JSON.stringify({content : content})
                });
                if (!response.ok) {
                    throw new Error('Error adding to-do');
                } else {
                    console.log("ToDo added Succesfully");
                    
                }

                const data = await response.json();
                const newToDo = data.toDo;
                showNewToDo(newToDo);
                document.getElementById('new-todo-content').value = "";
            } catch (error) {
                console.error('Error:', error);
            }
        }

        //displays the new todo in the DOM matching the backend changes
        function showNewToDo(toDo){
            const toDoListContainer = document.getElementById("todo-list"); //gets the todo-list div
            const toDoElement = document.createElement('div'); //the next lines make a new toDo matching the format of the old ones
            toDoElement.className = 'note';
            toDoElement.id = `note-id-${toDo.id}`
            console.log(toDo);
            toDoElement.innerHTML = 
                `<div class="to-do-content">
                    <p id="todo-content-${toDo.id}">${toDo.content}</p> <!-- Regular content-->
                    <button id="edit-${toDo.id}" onclick="showEditForm('${toDo.id}')">
                        <img class="icon" src="/assets/pencil-solid.svg" alt="pencil icon for edit button">
                    </button>
                    <form id="edit-form-${toDo.id}" onsubmit="submitEditForm(event, '${toDo.id}')">
                        <input type="hidden" name="id" value="${toDo.id}">
                        <input id="todo-input-${toDo.id}" type="text" name="content" value="${toDo.content}" hidden="true" autofocus="true">
                        <button type="submit" id="submit-edit-${toDo.id}" hidden="true" onclick="hideEditForm('${toDo.id}')">
                            <img class="icon" src="/assets/check-solid.svg" alt="checkmark icon for submit changes">
                        </button>
                    </form>
                    <form id="delete-form-${toDo.id}" onsubmit="deleteToDo(event, '${toDo.id}')">
                        <button type="submit" id="delete-todo-${toDo.id}">
                            <img class="icon" src="/assets/trash-can.svg" alt="trash-can icon for delete to-do">
                        </button>
                    </form>
                </div>
                
                
                `
            //this inserts the new to do before the old first 
            //child to match the order they are normally displayed
            toDoListContainer.insertBefore(toDoElement, toDoListContainer.firstChild); 
            

        }


        //catches the submit from the edit form and sends it to the backend with the correct patch HTTP request
        //while updating the client DOM so the edits appear without a reload
        async function submitEditForm(event, id){
            event.preventDefault();
            const content = document.getElementById("todo-input-" + id).value;
            document.getElementById("todo-content-" + id).innerHTML = content;
            try {
                const response = await fetch('/todos/' + id, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type' : 'application/json'
                    },
                    body: JSON.stringify({content : content})
                });
                if (response.ok) {
            
                console.log('ToDo updated successfully');
                } else {
                console.error('Failed to update ToDo');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        //catches the submit from the delete form and sends it to the backend with the correct DELETE HTTP request
        //while updating the client DOM so the deleted item is deleted without a reload
        async function deleteToDo(event, id){
            event.preventDefault();
            const element = document.getElementById("note-id-" + id);
            removeChildren(element);
            element.remove();
            try {
                const response = await fetch('/todos/' + id, {
                    method: 'DELETE'
                })

                if (response.ok) {
                    console.log('ToDo updated successfully');
                } else {
                    console.error('Failed to update ToDo');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

    </script>
</body>
</html>